import { useState } from 'react';
import './App.css';

function App() {
  const [owner, setOwner] = useState('');
  const [repo, setRepo] = useState('');
  const [issueNumber, setIssueNumber] = useState('');
  const [analysis, setAnalysis] = useState('');
  const [loading, setLoading] = useState(false);

  const handleAnalyze = async () => {
    setLoading(true);
    setAnalysis('');
    try {
      const response = await fetch('http://127.0.0.1:8000/analyze_issue/', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ owner, repo, issue_number: parseInt(issueNumber) })
      });

      const data = await response.json();
      if (response.ok) {
        setAnalysis(data.analysis);
      } else {
        setAnalysis(`Error: ${data.error}`);
      }
    } catch (err) {
      setAnalysis(`Fetch failed: ${err.message}`);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="app-container">
      <h1>üîç GitHub Issue Analyzer</h1>
      <input
        type="text"
        placeholder="Owner (e.g. microsoft)"
        value={owner}
        onChange={(e) => setOwner(e.target.value)}
      />
      <input
        type="text"
        placeholder="Repo (e.g. vscode)"
        value={repo}
        onChange={(e) => setRepo(e.target.value)}
      />
      <input
        type="number"
        placeholder="Issue Number"
        value={issueNumber}
        onChange={(e) => setIssueNumber(e.target.value)}
      />
      <button onClick={handleAnalyze} disabled={loading}>
        {loading ? 'Analyzing...' : 'Analyze Issue'}
      </button>

      {analysis && (
        <div className="analysis-box">
          <h2> Analysis:</h2>
          <pre>{analysis}</pre>
        </div>
      )}
    </div>
  );
}

export default App;
